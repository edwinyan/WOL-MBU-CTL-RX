#ifndef _PROTOCOL_H_
#define _PROTOCOL_H_


//protocol for send message to gcs by UART
#define HEAD1		0xAA
#define HEAD2		0xAA
#define TAIL1		0x55
#define TAIL2		0x55

typedef enum{
	TYPE_SRC_START=0,
	TYPE_SRC_DRONE=TYPE_SRC_START,
	TYPE_SRC_JPYSTICK,

	TYPE_SRC_NUM
}type_src_enum;


typedef enum{
	PACKET_SRC_START=0,
	PACKET_SRC_HEAD1=PACKET_SRC_START,
	PACKET_SRC_HEAD2,
	PACKET_SRC_DRONE_ENABLE,
	PACKET_SRC_PTZ_ENABLE,
	PACKET_SRC_THROTTLE,
	PACKET_SRC_THROTTLE_VALUE,
	PACKET_SRC_ROLL,
	PACKET_SRC_ROLL_VALUE,
	PACKET_SRC_PITCH,
	PACKET_SRC_PITCH_VALUE,
	PACKET_SRC_YAW,
	PACKET_SRC_YAW_VALUE,
	PACKET_SRC_HORIZONTAL,
	PACKET_SRC_HORIZONTAL_VALUE,
	PACKET_SRC_VERTICAL,
	PACKET_SRC_VERTICAL_VALUE,
	PACKET_SRC_CHECKSUM,
	PACKET_SRC_TAIL1,
	PACKET_SRC_TAIL2,

	PACKET_SRC_NUM
}packet_src_enum;

//protocol for receive message from TX board by CAN bus
typedef enum{
	PWR_SRC_START=0,
	PWR_SRC_KEY1 =PWR_SRC_START,
	PWR_SRC_KEY2,
	PWR_SRC_KEY3,
	PWR_SRC_KEY4,

	PWR_SRC_NUM
}pwr_src_enum;


#endif
